{"version":3,"sources":["Crimes.js","App.js","index.js"],"names":["Crimes","useState","chartData","setChartData","date","setDate","force","setForce","forces","setForces","useEffect","a","axios","result","data","fetchData","get","then","res","dataObj","some","e","label","category","index","findIndex","element","countNo","count","push","d","labels","datasets","backgroundColor","borderColor","borderWidth","catch","err","console","log","chart","className","type","maxLength","value","onChange","target","map","style","color","id","name","options","responsive","title","text","display","scales","yAxes","ticks","beginAtZero","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAyLeA,EAnLA,WAEX,MAAmCC,mBAAS,IAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,WAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA0BJ,mBAAS,kBAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KAkHA,OAdJC,qBAAU,YAES,uCAAG,4BAAAC,EAAA,sEACOC,IAAM,qCADb,OACRC,EADQ,OAGdJ,EAAUI,EAAOC,MAHH,2CAAH,qDAMbC,GAzGF,WAEI,IAAIb,EAAY,GAEhBU,IAAMI,IAAN,iFAAoFV,EAApF,iBAAkGF,IACjGa,MAAK,SAAAC,GAAQ,IAAD,gBACQA,EAAIJ,MADZ,yBACHK,EADG,QAET,GAAIjB,EAAUkB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,QAAUH,EAAQI,YAAW,CAEnD,IACIC,EAAQtB,EAAUuB,WADT,SAACC,GAAD,OAAaA,EAAQJ,QAAUH,EAAQI,YAEhDI,EAAUzB,EAAUsB,GAAOI,MAAM,EACrC1B,EAAUsB,GAAS,CAACF,MAAMH,EAAQI,SAAUK,MAAMD,QAGtDzB,EAAU2B,KAAM,CAACP,MAAMH,EAAQI,SAAUK,MAAM,KATnD,IAAI,EAAJ,qBAAgC,IADnB,8BAgBb,IAhBa,EAgBTN,EAAQ,GACRM,EAAQ,GAjBC,cAkBE1B,GAlBF,IAkBb,IAAI,EAAJ,qBAAyB,CAAC,IAAhB4B,EAAe,QACrBR,EAAMO,KAAKC,EAAER,OACbM,EAAMC,KAAKC,EAAEF,QApBJ,8BAwBbzB,EAAa,CACT4B,OAAQT,EACRU,SAAU,CAAC,CACkBV,MAAO,iBACPR,KAAMc,EACNK,gBAAiB,CACb,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,0BACA,0BACA,0BACA,0BACA,0BACA,2BACA,2BAEJC,YAAa,CACT,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,wBACA,wBACA,wBACA,wBACA,wBACA,yBACA,yBAEJC,YAAa,SAKjDC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,MAehBG,KACC,CAACpC,EAAME,IAIJ,gCACI,oBAAImC,UAAU,QAAd,kEAGA,sBAAKA,UAAU,SAAf,UACI,oBAAIA,UAAU,QAAd,4CAEA,iCACI,uBAAOA,UAAU,QAAjB,uCACA,uBACAA,UAAU,QACVC,KAAK,OACLC,UAAU,IACVC,MAAOxC,EACPyC,SAAU,SAAAxB,GAAC,OAAIhB,EAAQgB,EAAEyB,OAAOF,UAGhC,uBAAOH,UAAU,QAAjB,iCAEA,wBACIA,UAAU,QACVG,MAAOtC,EACPuC,SAAU,SAACxB,GAAD,OAAOd,EAASc,EAAEyB,OAAOF,QAHvC,SAMKpC,EAAOuC,KAAI,SAACH,GAAD,OAC7B,wBAAQI,MAAO,CAACC,MAAO,SAAUL,MAAOA,EAAMM,GAA9C,SACEN,EAAMO,MAD+CP,EAAMM,eAUpE,gCACc,8CACA,8BACI,cAAC,IAAD,CACEpC,KAAMZ,EACNkD,QAAS,CACLC,YAAW,EACXC,MAAO,CAAEC,KAAM,QAASC,SAAS,GACjCC,OAAO,CACHC,MAAM,CAAE,CACJC,MAAM,CACFC,aAAa,kBCnKlCC,MARf,WACE,OACM,qBAAKpB,UAAU,UAAf,SACI,cAAC,EAAD,OCAZqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.723fb1e2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2'\nimport axios from 'axios';\n\n  \n\nconst Crimes = () => {\n   \n    const [chartData, setChartData]  = useState({});\n    const [date, setDate] = useState('2021-03');\n    const [force, setForce] = useState('leicestershire');\n    const [forces, setForces] = useState([]);\n\n    \n    function chart() {\n\n        let chartData = [];\n        \n        axios.get(`https://data.police.uk/api/crimes-no-location?category=all-crime&force=${force}&date=${date}`)\n        .then(res => {\n        for(const dataObj of res.data ){\n            if (chartData.some(e => e.label === dataObj.category)) {\n\n                const elem = (element) => element.label === dataObj.category;\n                let index = chartData.findIndex(elem);\n                let countNo = chartData[index].count+1;\n                chartData[index] = {label:dataObj.category, count:countNo}\n              }\n            else{\n            chartData.push(({label:dataObj.category, count:1}));\n            }\n            \n\n        }\n            \n        let label = [];\n        let count = [];\n        for(const d of chartData){\n            label.push(d.label);\n            count.push(d.count);\n        }\n        \n\n        setChartData({\n            labels: label,\n            datasets: [{\n                                         label: 'Times happened',\n                                         data: count,\n                                         backgroundColor: [\n                                             'rgba(255, 99, 132, 0.2)',\n                                             'rgba(54, 162, 235, 0.2)',\n                                             'rgba(255, 206, 86, 0.2)',\n                                             'rgba(75, 192, 192, 0.2)',\n                                             'rgba(153, 102, 255, 0.2)',\n                                             'rgba(255, 159, 64, 0.2)',\n                                             'rgba(255, 99, 132, 0.2)',\n                                             'rgba(54, 162, 235, 0.2)',\n                                             'rgba(255, 206, 86, 0.2)',\n                                             'rgba(75, 192, 192, 0.2)',\n                                             'rgba(153, 102, 255, 0.2)',\n                                             'rgba(255, 159, 64, 0.2)',\n                                             'rgba(255, 99, 132, 0.2)',\n                                             'rgba(54, 162, 235, 0.2)',\n                                             'rgba(255, 206, 86, 0.2)',\n                                             'rgba(75, 192, 192, 0.2)',\n                                             'rgba(153, 102, 255, 0.2)',\n                                             'rgba(255, 159, 64, 0.2)',\n                                             'rgba(255, 99, 132, 0.2)',\n                                             'rgba(54, 162, 235, 0.2)',\n                                             'rgba(255, 206, 86, 0.2)',\n                                             'rgba(75, 192, 192, 0.2)',\n                                             'rgba(153, 102, 255, 0.2)',\n                                             'rgba(255, 159, 64, 0.2)',\n                                         ],\n                                         borderColor: [\n                                             'rgba(255, 99, 132, 1)',\n                                             'rgba(54, 162, 235, 1)',\n                                             'rgba(255, 206, 86, 1)',\n                                             'rgba(75, 192, 192, 1)',\n                                             'rgba(153, 102, 255, 1)',\n                                             'rgba(255, 159, 64, 1)',\n                                             'rgba(255, 99, 132, 1)',\n                                             'rgba(54, 162, 235, 1)',\n                                             'rgba(255, 206, 86, 1)',\n                                             'rgba(75, 192, 192, 1)',\n                                             'rgba(153, 102, 255, 1)',\n                                             'rgba(255, 159, 64, 1)',\n                                             'rgba(255, 99, 132, 1)',\n                                             'rgba(54, 162, 235, 1)',\n                                             'rgba(255, 206, 86, 1)',\n                                             'rgba(75, 192, 192, 1)',\n                                             'rgba(153, 102, 255, 1)',\n                                             'rgba(255, 159, 64, 1)',\n                                             'rgba(255, 99, 132, 1)',\n                                             'rgba(54, 162, 235, 1)',\n                                             'rgba(255, 206, 86, 1)',\n                                             'rgba(75, 192, 192, 1)',\n                                             'rgba(153, 102, 255, 1)',\n                                             'rgba(255, 159, 64, 1)',\n                                         ],\n                                         borderWidth: 1\n                                     }]\n        });\n        \n    })\n    .catch(err =>{\n        console.log(err);\n    })\n    \n}\n\nuseEffect(() => {\n\n    const fetchData = async () => {\n        const result = await axios(`https://data.police.uk/api/forces`);\n   \n        setForces(result.data);\n      };\n   \n      fetchData();\n\n    chart();\n  }, [date, force]);\n\n    \n    return ( \n        <div>\n            <h1 className=\"title\">This is page for crimes in your county for that date</h1>\n\n\n            <div className=\"search\">\n                <h3 className=\"title\">Search will load automatically</h3>\n\n                <form>\n                    <label className=\"label\">Write date here (YYYY-MM)</label>\n                    <input \n                    className=\"input\"\n                    type=\"text\"\n                    maxLength='7'\n                    value={date}\n                    onChange={e => setDate(e.target.value)}\n                    />\n                    \n                    <label className=\"label\">Select Police Force</label>\n\n                    <select\n                        className=\"input\"\n                        value={force}\n                        onChange={(e) => setForce(e.target.value)}\n                    >\n\t\t\t\t\t\t\n                        {forces.map((value) => (\n\t\t\t\t\t\t\t<option style={{color: 'black'}} value={value.id} key={value.id}>\n\t\t\t\t\t\t\t\t{value.name}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t))}\n                        \n                    </select>\n                </form>\n            </div>\n\n\n<div>\n              <h1>Crimes Chart</h1>\n              <div>\n                  <Bar\n                    data={chartData}\n                    options={{\n                        responsive:true,\n                        title: { text: \"Units\", display: true },\n                        scales:{\n                            yAxes:[ {\n                                ticks:{\n                                    beginAtZero: true\n                                }\n                            }\n                            ]\n                        }\n                    }}\n                  />\n              </div>\n          </div>\n        </div>\n    )}\n \nexport default Crimes;","import Crimes from './Crimes';\n\nfunction App() {\n  return (\n        <div className=\"content\" >\n            <Crimes />\n        </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}